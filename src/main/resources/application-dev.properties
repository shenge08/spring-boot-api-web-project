# 开发环境配置
# druid连接池配置
    #initial-size：初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    spring.datasource.druid.initial-size=8
    #max-active：最大连接池数量
    spring.datasource.druid.max-active=8
    #min-idle：最小连接池数量
    spring.datasource.druid.min-idle=4
    #max-wait：获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
    #spring.datasource.druid.max-wait=
    #pool-prepared-statements：是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
    spring.datasource.druid.pool-prepared-statements=true
    #max-open-prepared-statements:要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    spring.datasource.druid.max-open-prepared-statements=100
    #spring.datasource.druid.max-pool-prepared-statement-per-connection-size=
    #validation-query用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
    #spring.datasource.druid.validation-query=
    #spring.datasource.druid.validation-query-timeout=
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    #spring.datasource.druid.test-on-borrow=
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    #spring.datasource.druid.test-on-return=
    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    #spring.datasource.druid.test-while-idle=
    #between-eviction-runs-millis：每隔多少秒去扫描空闲的连接
    #spring.datasource.druid.time-between-eviction-runs-millis=
    #min-evictable-idle-time-millis：一个连接在池中最小生存的时间
    #spring.datasource.druid.min-evictable-idle-time-millis=
    #max-evictable-idle-time-millis：一个连接在池中最大生存的时间
    #spring.datasource.druid.max-evictable-idle-time-millis=
    #filters：属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall #配置多个英文逗号分隔
    spring.datasource.druid.filters=stat,wall 

# 数据源配置，请修改为你项目的实际配置
spring.datasource.url=jdbc:postgresql://10.67.145.15:5432/shyz
spring.datasource.username=postgres
spring.datasource.password=ROOT
spring.datasource.driver-class-name=org.postgresql.Driver

